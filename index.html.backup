<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Resume</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&family=Lora:wght@400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/tsparticles@2.12.0/tsparticles.bundle.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        #tsparticles {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: -1;
            pointer-events: none;
        }
        
        body {
            background: linear-gradient(135deg, #ffffff 0%, rgba(46, 204, 113, 0.05) 100%);
            color: #333;
            line-height: 1.6;
            font-family: 'Montserrat', sans-serif;
        }
        
        .resume-container {
            max-width: 850px;
            margin: 0 auto;
            background: linear-gradient(135deg, rgba(255,255,255,1) 85%, rgba(220,235,220,0.4) 100%);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            padding: 40px;
            position: relative;
            overflow: hidden;
        }
        
        .header {
            position: relative;
            margin-bottom: 35px;
            border-bottom: 2px solid #165a35;
            padding-bottom: 25px;
            background: linear-gradient(135deg, rgba(255,255,255,0.7) 0%, rgba(22, 90, 53, 0.05) 100%);
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(22, 90, 53, 0.1);
        }
        
        .language-switch {
            position: absolute;
            top: 20px;
            right: 20px;
            display: flex;
            gap: 10px;
        }
        
        .language-btn {
            padding: 8px 16px;
            border: 2px solid #2ecc71;
            background: white;
            color: #2ecc71;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
        }
        
        .language-btn.active {
            background: #2ecc71;
            color: white;
        }
        
        .cv-content {
            display: none;
        }
        
        .cv-content.active {
            display: block;
        }
        
        /* Existing styles remain the same */
        ${existingStyles}
    </style>
</head>
<body>
    <div id="tsparticles"></div>
    <div class="resume-container">
        <div class="background-element"></div>
        <div class="background-element-2"></div>
        <div class="side-accent"></div>
        
        <div class="header">
            <div class="language-switch">
                <button class="language-btn active" onclick="switchLanguage('de')">DE</button>
                <button class="language-btn" onclick="switchLanguage('en')">EN</button>
            </div>
            <h1>Wiebke Kaemper</h1>
            <div class="contact-info">
                <div class="contact-item">
                    <i class="fas fa-envelope"></i>
                    <span>kaemper.wiebke@gmx.de</span>
                </div>
                <div class="contact-item">
                    <i class="fas fa-phone"></i>
                    <span>0176 23342693</span>
                </div>
                <div class="contact-item">
                    <i class="fas fa-home"></i>
                    <span>Forsthausstra√üe 30, 65527 Niedernhausen</span>
                </div>
            </div>
        </div>
        
        <div id="de-content" class="cv-content active">
            ${germanCV}
        </div>
        
        <div id="en-content" class="cv-content">
            ${englishCV}
        </div>
    </div>
    
    <script>
        function switchLanguage(lang) {
            const buttons = document.querySelectorAll('.language-btn');
            const contents = document.querySelectorAll('.cv-content');
            
            buttons.forEach(btn => {
                btn.classList.remove('active');
                if (btn.textContent.toLowerCase() === lang.toUpperCase()) {
                    btn.classList.add('active');
                }
            });
            
            contents.forEach(content => {
                content.classList.remove('active');
                if (content.id === `${lang}-content`) {
                    content.classList.add('active');
                }
            });
        }
        
        // Particle.js configuration
        tsParticles.load("tsparticles", {
            fullScreen: false,
            background: {
                color: {
                    value: "transparent"
                }
            },
            fpsLimit: 60,
            particles: {
                color: {
                    value: "#2ecc71"
                },
                links: {
                    color: "#2ecc71",
                    distance: 150,
                    enable: true,
                    opacity: 0.2,
                    width: 1
                },
                shape: {
                    type: "triangle"
                },
                size: {
                    value: { min: 3, max: 6 }
                },
                number: {
                    density: {
                        enable: true,
                        area: 800
                    },
                    value: 80
                },
                move: {
                    enable: true,
                    speed: 2,
                    direction: "none",
                    random: true,
                    straight: false,
                    outModes: {
                        default: "bounce"
                    }
                },
                opacity: {
                    value: 0.3
                }
            },
            interactivity: {
                detect_on: "canvas",
                events: {
                    onHover: {
                        enable: true,
                        mode: "grab"
                    },
                    resize: true
                },
                modes: {
                    grab: {
                        distance: 200,
                        links: {
                            opacity: 0.3
                        }
                    }
                }
            },
            detectRetina: true
        });
    </script>
</body>
</html>
